/*
 * Copyright 2017 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id "io.spinnaker.project" version "$spinnakerGradleVersion" apply false
  id "org.jetbrains.kotlin.jvm" version "$kotlinVersion" apply false
  id "io.gitlab.arturbosch.detekt" version "1.17.1" apply false
  id "org.jetbrains.dokka" version "1.9.20" apply false
}

allprojects {
  apply plugin: "io.spinnaker.project"

  group = "io.spinnaker.swabbie"
}

subprojects {
  if (korkVersion.endsWith("-SNAPSHOT")) {
    repositories {
      mavenLocal()
    }
  }

  if (name != "swabbie-bom") {
    apply plugin: "java-library"
    apply from: "$rootDir/gradle/kotlin.gradle"
    apply from: "$rootDir/gradle/junit5.gradle"
    apply from: "$rootDir/gradle/license.gradle"
    apply from: "$rootDir/gradle/dokka.gradle"

    dependencies {
      implementation(enforcedPlatform("io.spinnaker.kork:kork-bom:$korkVersion"))
      annotationProcessor(platform("io.spinnaker.kork:kork-bom:$korkVersion"))
      testAnnotationProcessor(platform("io.spinnaker.kork:kork-bom:$korkVersion"))
      implementation("org.slf4j:slf4j-api")
    }

    configurations.all {
      exclude group: "javax.servlet", module: "servlet-api"
    }

    test {
      testLogging {
        exceptionFormat = "full"
        events 'PASSED', 'FAILED', 'SKIPPED'
      }
      afterSuite { desc, result ->
        if (!desc.parent) {
          println "\nTest result: ${result.resultType}"
          println "Test summary: ${result.testCount} tests, " +
            "${result.successfulTestCount} succeeded, " +
            "${result.failedTestCount} failed, " +
            "${result.skippedTestCount} skipped"
        }
      }
    }
  }
}

defaultTasks ":swabbie-web:run"
