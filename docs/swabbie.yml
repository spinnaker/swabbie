server:
  port: 8092

orca:
  baseUrl: # orca url

front50:
  baseUrl: # front50 url

clouddriver:
  baseUrl: # clouddriver url

echo:
  baseUrl: # echo url

retrofit:
  logLevel: BASIC

okHttpClient:
  propagateSpinnakerHeaders: true
  connectTimeoutMs: 60000
  readTimeoutMs: 60000

redis:
  enabled: true
  clients:
    default:
      primary:
        driver: redis
        config:
          connection: redis://localhost:6379

locking:
  enabled: true
  maximumLockDurationMillis: 7200000
  heartbeatRateMillis: 5000
  leaseDurationMillis: 60000

swabbie:
  dryRun: false
  work:
    intervalMs: 30000
  queue:
    monitorIntervalMs: 60000
  schedule:
    allowedDaysOfWeek:
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - FRIDAY
    startTime: "09:00"
    endTime: "17:00"

  providers:
    - name: aws
      locations:
        - us-east-1
      accounts:
        - test
      maxItemsProcessedPerCycle: 2000
      itemsProcessedBatchSize: 2000
      resourcesPerNotification: 100
      resourceTypes:
        - name: serverGroup
          enabled: true
          retention: 10
          maxAge: 30
          enabledActions: # defaults to all actions
            - MARK # schedules resources for deletion
            - NOTIFY # notifies resource owners
            #- DELETE # deletes resources. uncomment to enable actual deletion
          enabledRules:
            - operator: AND
              description: Empty Server Groups that have been disabled for more than than 45 days.
              rules:
                - name: ZeroInstanceRule
                - name: DisabledLoadBalancerRule
                  parameters:
                    moreThanDays: 45
            - operator: OR
              description: Expired Server Groups.
              rules:
                - name: ExpiredResourceRule
          notification:
            enabled: true
            types:
              - EMAIL
            defaultDestination: # a default email address to email in case owner is not resolved
            optOutBaseUrl: https://gate/cleanup/resources # where gate is running
            resourceUrl: http://url/to/spinnaker/ui/#/applications/{{application}}/clusters/serverGroupDetails/{{cloudProvider}}/{{env}}/{{region}}/{{resourceId}} # link to where the resource is in spinnaker. This template only applies to server groups
            docsUrl: # where you may have your docs site. This link is included in the email notification.
        - name: launchConfiguration
          enabled: true
          retention: 10
          maxAge: 30
          enabledActions:
            - MARK
          enabledRules:
            - operator: OR
              description: Orphaned or expired Launch Configurations.
              rules:
                - name: ExpiredResourceRule
                - name: AttributeRule
                  parameters:
                    isUsedByServerGroups: false
          notification:
            enabled: false
        - name: image
          enabled: true
          retention: 2
          maxAge: 30
          exclusions:
            - type: Literal
              attributes:
                - key: description
                  value:
                    - pattern:base-ami
                - key: name
                  value:
                    - pattern:base
          enabledRules:
            - operator: AND
              description: Images not referenced by instances, launch configs and with no siblings or copies in other accounts.
              rules:
                - name: OrphanedImageRule
          notification:
            enabled: false
        - name: snapshot
          enabled: true
          retention: 2
          maxAge: 30
          enabledRules:
            - operator: OR
              description: Snapshots referencing images that no longer exist.
              rules:
                - name: AttributeRule
                  parameters:
                    imageExists: false
                - name: ExpiredResourceRule # amazon resources that are tagged with: ttl=10d (d=days, w=weeks, m=months, y=year)
          notification:
            enabled: false
